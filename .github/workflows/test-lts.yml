name: Run LTS tests
on: [push, pull_request, workflow_dispatch]
jobs:
  snapshots:
    name: Get snapshots
    runs-on: ubuntu-latest
    outputs:
      snapshots: ${{ steps.snapshots.outputs.snapshots }}
    steps:
      - id: snapshots
        run: |
          echo -n 'snapshots=' >"$GITHUB_OUTPUT"
          curl -s https://www.stackage.org/download/snapshots.json |jq -c '
            [to_entries[] | select(.key != "lts") | .key as $k | .value as $v
              | ($k | sub("^lts-"; "") | tonumber? // null) as $n
              | { ltsver: $n,
                  name: $v,
                  hacklibc: ($n != null and $n < 7),
                  # older versions of stack to support older versions of cabal
                  # in the snapshots
                  stack: (if $k == "nightly" or $n >= 12 then "latest"
                          elif $n >= 7 then "2.15"
                          elif $n >= 3 then "2.11"
                          else "1.9" end)
                }
              # somehow there is no bindist for 7.8.3? we could maybe use
              # ghcup to get it, but whatever
              | if $n == 0 then . + {args: "--compiler ghc-7.8.4"} else . end
            ] | sort_by(-(.ltsver // 1e5))' >>"$GITHUB_OUTPUT"
  build:
    needs: snapshots
    strategy:
      fail-fast: false
      matrix:
        snapshot: ${{ fromJSON(needs.snapshots.outputs.snapshots) }}
    name: ${{ matrix.snapshot.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        with:
          enable-stack: true
          stack-version: ${{ matrix.snapshot.stack }}
      # looks like a bunch of things like librt, libdl, libpthreads, etc, have
      # been folded into libc.so itself upstream, but some of the older haskell
      # toolchain stuff we wanna test apparently still expects the separate
      # libs. librt.so.1 still exists, presumably for compatibility with older
      # binaries, but libc6-dev no longer provides the .so symlinks. we just
      # hack around it by making them ourselves.
      - run: |
          dpkg -L libc6 |grep '/lib/.*\.so\.' |while read f; do
            so="${f%%.so.*}.so"
            [ ! -e "$so" ] && sudo ln -s "$f" "$so"
          done
        if: ${{ matrix.snapshot.hacklibc }}
      - run: |
          cat <<EOF >stack.yaml
          # older versions of stack hardcode some dead AWS URL.
          # causes warnings on some versions, but we can always make it
          # conditional later if it ever causes problems.
          latest-snapshot-url: https://www.stackage.org/download/snapshots.json
          resolver: ${{ matrix.snapshot.name }}
          packages: ['.']
          EOF
      # We hide some stuff that's part of Prelude in new versions and explicitly
      # import them from their respective modules instead, so that we can run on
      # old versions where Prelude doesn't have those symbols yet. However, that
      # causes warnings when hiding symbols which aren't exported in those old
      # versions, which we suppress here.
      - name: Test
        run: |
          stack test \
            --ghc-options='-Wall' \
            --ghc-options='-fno-warn-dodgy-imports' \
            --ghc-options='-Werror' \
            ${{ matrix.snapshot.args }} \
            --test-arguments='+RTS -N -RTS --quickcheck-tests 1000 --quickcheck-max-size 120'
